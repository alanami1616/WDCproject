

----------------------------
routes/index.js
----------------------------

const CLIENT_ID= '1111111111111-ffffffffffffffffffffffffffffffff.apps.googleusercontent.com';
const {OAuth2Client} = require('google-auth-library');
const client = new OAuth2Client(CLIENT_ID);


/*login modules.*/
router.post('/tokensignin', async function(req,res,next){
  try{
    const ticket = await client.verifyIdToken({
      idToken: req.body.idtoken,
      audience: CLIENT_ID, //Specify client id of app that accesses the backend
      //If multiples [CLIENT_ID_1, CLIENT_ID_2, ... , CLIENT_ID_n]
    });
    const payload = ticket.getPayload();
    const userid = payload['sub'];
    const email = payload['email'];

    console.log(userid+" "+email);

    //Login

    res.send();
  } catch{
    res.sendStatus(401);
  }
});

-------------------------------
javascripts/index.js
-------------------------------
function onSignIn(googleUser){
    var profile = googleUser.getBasicProfile();
    console.log('ID: ' + profile.getID());
    console.log('Name: ' + profile.getName());
    console.log('Image URL: ' + profile.getImageUrl());
    console.log('Email: ' + profile.getEmail());

    var id_token = googleUser.getAuthResponse().id_token;

    var xhr = new XMLHttpRequest();
    xhr.open('POST', '/tokensignin');

    xhr.onreadystatechange = function(){
        if(this.readyState === 4 && this.status === 200){
            //login successful
        }else if(this.readyState === 4 && this.status === 401){
            //login fail
        }
    };

        xhr.setRequestHeader('Content-Type', 'application/json');
    xhr.send(JSON.stringify({'idtoken': id_token}));

}

function signOut(){
    var auth2 = gapi.auth2.getAuthInstance();
    auth2.signOut().then(function(){
        console.log('user signed out.');
    });

    //server logout here.
}